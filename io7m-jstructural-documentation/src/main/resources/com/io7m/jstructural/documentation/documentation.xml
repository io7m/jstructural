<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright © 2014 <code@io7m.com> http://io7m.com

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted, provided that the above
  copyright notice and this permission notice appear in all copies.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

  version: structural 2.0.0
  -->

<s:document
  xmlns:s="http://www.io7m.com/schemas/structural/2.0.0"
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <s:document-title>Structural 2.0.0 Documentation</s:document-title>
  <s:document-style>documentation.css</s:document-style>
  <s:document-contents/>

<s:part>
  <s:part-title>Package Information</s:part-title>
  <s:part-contents />
  <s:section>
    <s:section-title>Orientation</s:section-title>
    <s:subsection>
      <s:subsection-title>Overview</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="package">jstructural</s:term>
        package implements a set of primitives for producing technical
        documentation. The package provides
        <s:link-external s:target="http://relaxng.org/">RELAX-NG</s:link-external>
        and <s:link-external s:target="http://www.w3.org/XML/Schema">XSD</s:link-external>
        schemas describing the format of <s:term s:type="package">structural</s:term>
        documents and a set of Java tools for producing XHTML 1.0 Strict output.
      </s:paragraph>
      <s:paragraph>
        In contrast to other systems such as
        <s:link-external s:target="http://www.docbook.org/">DocBook</s:link-external>,
        the <s:term s:type="package">structural</s:term>
        language only defines elements concerning the structure of the document
        and not the semantics of the elements. The intention is that higher
        level languages will produce <s:term s:type="package">structural</s:term>
        documents as output and then use the provided stylesheets to get various
        services such as table of contents generation, chapter numbering,
        footnotes, et cetera, without having to re-implement all of those
        features for each new language.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Portability</s:subsection-title>
      <s:paragraph>
        The canonical format for the <s:term s:type="package">structural</s:term>
        schema is RELAX-NG, but an XSD schema (generated from the RELAX-NG
        schema is also provided, for validation using tools that do not support
        RELAX-NG).
      </s:paragraph>
      <s:paragraph>
        The provided <s:term s:type="package">structural</s:term> to XHTML
        translator is written in pure Java and should be usable on any JVM
        that supports Java 6 and newer.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Simplicity</s:subsection-title>
      <s:paragraph>
        As the <s:term s:type="package">structural</s:term>
        language focuses only on structural elements, it is far simpler than any
        of the other XML documentation formats. As an example,
        <s:link-external s:target="http://www.docbook.org/">DocBook</s:link-external>,
        which mixes structural and semantic elements, defines nearly 400
        elements as opposed to the 30 or so defined by the
        <s:term s:type="package">structural</s:term> language.
      </s:paragraph>
      <s:paragraph>
        Given the small number of elements and the relatively strict schema, the
        number of possible permutations of elements is low and, as a result, the
        XHTML output is easily predictable
        <s:footnote>There are various combinations of DocBook elements that are
          valid according to the schema but cannot realistically be used due to
          the resulting XHTML output.</s:footnote>.
      </s:paragraph>
    </s:subsection>
  </s:section>
  <s:section>
    <s:section-title>Installation</s:section-title>
     <s:subsection>
      <s:subsection-title>Source compilation</s:subsection-title>
      <s:paragraph>
        The project can be compiled and installed with
        <s:link-external s:target="http://maven.apache.org">Maven</s:link-external>:
      </s:paragraph>
      <s:paragraph>
        <s:verbatim s:type="example"><![CDATA[$ mvn -C clean install]]></s:verbatim>
      </s:paragraph>
    </s:subsection>
  </s:section>
  <s:section>
    <s:section-title>Supported Systems</s:section-title>
    <s:formal-item s:kind="platform_table" s:type="platforms">
      <s:formal-item-title>Supported systems</s:formal-item-title>
      <s:table>
        <s:table-summary>Supported systems</s:table-summary>
        <s:table-head>
          <s:table-column-name>OS</s:table-column-name>
          <s:table-column-name>OS-Version</s:table-column-name>
          <s:table-column-name>OS-Arch</s:table-column-name>
          <s:table-column-name>JDK-Vendor</s:table-column-name>
          <s:table-column-name>JDK-Version</s:table-column-name>
          <s:table-column-name>VM</s:table-column-name>
          <s:table-column-name>VM-Version</s:table-column-name>
        </s:table-head>
        <s:table-body>
<s:table-row>
  <s:table-cell>Linux</s:table-cell>
  <s:table-cell>3.12.3-1-ARCH</s:table-cell>
  <s:table-cell>amd64</s:table-cell>
  <s:table-cell>Oracle Corporation</s:table-cell>
  <s:table-cell>1.7.0_45</s:table-cell>
  <s:table-cell>OpenJDK 64-Bit Server VM</s:table-cell>
  <s:table-cell>Oracle Corporation</s:table-cell>
  <s:table-cell>24.45-b08</s:table-cell>
</s:table-row>
        </s:table-body>
      </s:table>
    </s:formal-item>
  </s:section>
  <s:section>
    <s:section-title>Platform Specific Issues</s:section-title>
    <s:paragraph>
      There are no known platform-specific issues.
    </s:paragraph>
  </s:section>
  <s:section>
    <s:section-title>License</s:section-title>
    <s:paragraph>
      All files distributed with the <s:term s:type="package">structural</s:term>
      package are placed under the following license:
      <s:verbatim s:type="license"><![CDATA[
Copyright © 2014 <code@io7m.com> http://io7m.com

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.]]>
      </s:verbatim>
    </s:paragraph>
    <s:paragraph>
      Exceptions to the above are the files:
    </s:paragraph>
    <s:formal-item s:kind="files">
      <s:formal-item-title>Schema files</s:formal-item-title>
      <s:list-unordered>
        <s:list-item><s:term s:type="file">io7m-jstructural-tests/src/test/resources/com/io7m/jstructural/xhtml1-strict.xsd</s:term></s:list-item>
        <s:list-item><s:term s:type="file">io7m-jstructural-tests/src/test/resources/com/io7m/jstructural/xml.xsd</s:term></s:list-item>
      </s:list-unordered>
    </s:formal-item>
    <s:paragraph>
      These files are the XSD schema for XHTML Strict 1.0
      <s:footnote>
        <s:link-external s:target="http://www.w3.org/TR/xhtml1-schema/">http://www.w3.org/TR/xhtml1-schema/</s:link-external>
      </s:footnote>
      and are used by the test suite to validate the XHTML output produced by all
      test documents. They are included to allow the test suite to execute
      on machines that do not have network access (and therefore cannot fetch
      the schema files from the <s:term s:type="organization">w3</s:term> servers).
      They are covered by at least one of the <s:term s:type="organization">w3</s:term>'s
      many licenses
      <s:footnote>
        <s:link-external s:target="http://www.w3.org/Consortium/Legal/">http://www.w3.org/Consortium/Legal/</s:link-external>
      </s:footnote>. Unfortunately, we're not exactly sure which. No infringement
      is intended.
    </s:paragraph>
  </s:section>
</s:part>

<s:part>
  <s:part-title>API Tutorial</s:part-title>
  <s:part-contents/>
  <s:section>
    <s:section-title>API Tutorial</s:section-title>
    <s:subsection>
      <s:subsection-title>Overview</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="package">jstructural</s:term> API is divided
        into <s:term s:type="keyword">core</s:term> and <s:term s:type="keyword">annotated</s:term>
        types. The <s:term s:type="keyword">core</s:term> types have an (almost) 1:1
        correspondence with the elements that a document author writes in XML. The
        <s:link-external s:target="apidocs/com/io7m/jstructural/xom/SDocumentParser.html">parser</s:link-external>
        included with the <s:link-external s:target="http://xom.nu">XOM</s:link-external> backend,
        for example, produces a document consisting of elements of the
        <s:term s:type="keyword">core</s:term> types from an XML file. The
        <s:term s:type="keyword">annotated</s:term> types are, unsurprisingly,
        values of the <s:term s:type="keyword">core</s:term> types with additional
        annotations and metadata required to actually produce documents in XHTML
        format.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Usage</s:subsection-title>
      <s:paragraph>
        Parsing documents and producing XHTML output is quite simple. First,
        a stream representing an XML file is given to the included
        <s:link-external s:target="apidocs/com/io7m/jstructural/xom/SDocumentParser.html">parser</s:link-external>,
        which parses and validates the document against the
        <s:term s:type="package">structural</s:term> schema.
      </s:paragraph>
      <s:formal-item s:kind="example">
        <s:formal-item-title>Parsing</s:formal-item-title>
        <s:verbatim>
URI uri;
Log log;
InputStream stream;        

final SDocument doc = SDocumentParser.fromStream(stream, uri, log);
        </s:verbatim>
      </s:formal-item>
      <s:paragraph>
        Then, the resulting document is annotated with the included
        <s:link-external s:target="apidocs/com/io7m/jstructural/annotated/SAnnotator.html">annotator</s:link-external>:
      </s:paragraph>
      <s:formal-item s:kind="example">
        <s:formal-item-title>Annotation</s:formal-item-title>
        <s:verbatim>
Log log;
SDocument doc;       

final SADocument adoc = SAnnotator.document (doc, log);
        </s:verbatim>
      </s:formal-item>
      <s:paragraph>
        Finally, either the
        <s:link-external s:target="apidocs/com/io7m/jstructural/xom/SDocumentXHTMLWriterSingle.html">single-page writer</s:link-external>
        or
        <s:link-external s:target="apidocs/com/io7m/jstructural/xom/SDocumentXHTMLWriterMulti.html">multi-page writer</s:link-external>
        are used to produce a set of XHTML documents that can be serialized
        using the standard XOM serializer.
      </s:paragraph>
      <s:formal-item s:kind="example">
        <s:formal-item-title>Writing</s:formal-item-title>
        <s:verbatim>
Log log;
SADocument doc;
SDocumentXHTMLWriterCallbacks callbacks;      

SDocumentXHTMLWriterSingle writer = new SDocumentXHTMLWriterSingle();
SortedMap&lt;String, Document> pages = writer.writeDocuments(callbacks, doc);
        </s:verbatim>
      </s:formal-item>
      <s:paragraph>
        The map returned by the <s:term s:type="function">writeDocuments</s:term>
        function is a set of mappings from file names to documents.
      </s:paragraph>
      <s:paragraph>
        The writers take a set of callbacks as arguments that can be used
        to customize the resulting output. See the 
        <s:link-external s:target="apidocs/com/io7m/jstructural/xom/SDocumentXHTMLWriterCallbacks.html">javadoc</s:link-external>
        for details.
      </s:paragraph>
    </s:subsection>
  </s:section>
</s:part>

<s:part>
  <s:part-title>API Reference</s:part-title>
  <s:part-contents/>
  <s:section>
    <s:section-title>Javadoc</s:section-title>
    <s:paragraph>
      API documentation for the packages is provided via the
      included <s:link-external s:target="apidocs/index.html">Javadoc</s:link-external>.
    </s:paragraph>
  </s:section>
</s:part>

<s:part>
  <s:part-title>Tool Reference</s:part-title>
  <s:part-contents/>
  
  <s:section xml:id="tool_ref_jsc">
    <s:section-title>jsc</s:section-title>
    <s:subsection>
      <s:subsection-title>Overview</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="command">jsc</s:term> tool transforms
        <s:term s:type="package">structural</s:term> documents into
        XHTML 1.0 Strict.
      </s:paragraph>
      <s:paragraph>
        <s:verbatim s:type="terminal"><![CDATA[jsc: [options] --check        file
  or [options] --xhtml-single file outdir
  or [options] --xhtml-multi  file outdir
  or [options] --version

     --check                      Parse and validate all source files, but do not produce output
     --debug                      Enable debugging (debug messages, exception backtraces)
  -h,--help                       Show this help message
     --version                    Display version
     --xhtml-body-end <file>      Insert the given file into the resulting XHTML at the end of the document's body
     --xhtml-body-start <file>    Insert the given file into the resulting XHTML at the start of the document's body
     --xhtml-multi                Produce multiple XHTML files as output
     --xhtml-single               Produce a single XHTML file as output]]></s:verbatim>
      </s:paragraph>
      <s:paragraph>
        When the <s:term s:type="command">--check</s:term> argument is specified,
        the file <s:term s:type="file">file</s:term> is parsed and validated according
        to the <s:term s:type="package">structural</s:term> schema. 
        <s:link-external s:target="http://www.w3.org/TR/xinclude">XIncludes</s:link-external>
        are understood by <s:term s:type="command">jsc</s:term> and will be processed prior
        to validation.
      </s:paragraph>
      <s:paragraph>
        When the <s:term s:type="command">--xhtml-single</s:term> argument is specified,
        the given <s:term s:type="file">file</s:term> is validated exactly as with 
        <s:term s:type="command">--check</s:term>, and then a single XHTML 1.0 Strict
        document is written to <s:term s:type="file">outdir/index.xhtml</s:term>. The
        <s:term s:type="file">outdir</s:term> directory is created iff it does not
        already exist.
      </s:paragraph>
      <s:paragraph>
        When the <s:term s:type="command">--xhtml-multi</s:term> argument is specified,
        the given <s:term s:type="file">file</s:term> is validated exactly as with 
        <s:term s:type="command">--check</s:term>, and then a single XHTML 1.0 Strict
        document is written to <s:term s:type="file">outdir/index-m.xhtml</s:term>,
        which represents the front page of the document, and a series of files are
        written to <s:term s:type="file">outdir/*.xhtml</s:term>, representing the
        <s:link s:target="elem_part">parts</s:link> and
        <s:link s:target="elem_section">sections</s:link> of the document. The
        <s:term s:type="file">outdir</s:term> directory is created iff it does not
        already exist.
      </s:paragraph>
      <s:paragraph>
        When either <s:term s:type="command">--xhtml-multi</s:term> or
        <s:term s:type="command">--xhtml-single</s:term> are specified, the files
        <s:term s:type="file">outdir/jstructural-2.0.0-layout.css</s:term> and
        <s:term s:type="file">outdir/jstructural-2.0.0-colour.css</s:term> are
        created iff they do not already exist. These files contain CSS controlling
        the visual presentation of the XHTML.
      </s:paragraph>
      <s:paragraph>
        The <s:term s:type="command">--xhtml-body-start</s:term> option causes
        the contents of the given XML file to be inserted as the first child of the
        resulting XHTML <s:term s:type="element">body</s:term> element on each page.
        It is the user's responsibility to ensure that the resulting document is
        valid XHTML 1.0 Strict.
      </s:paragraph>
      <s:paragraph>
        The <s:term s:type="command">--xhtml-body-end</s:term> option causes
        the contents of the given XML file to be inserted as the last child of the
        resulting XHTML <s:term s:type="element">body</s:term> element on each page.
        It is the user's responsibility to ensure that the resulting document is
        valid XHTML 1.0 Strict.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Packaging</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="command">jsc</s:term> tool is packaged into the
        standalone <s:term s:type="file">io7m-jstructural-tools-2.0.0-jsc.jar</s:term>
        file distributed with <s:term s:type="package">jstructural</s:term>.
      </s:paragraph>
    </s:subsection>
  </s:section>
</s:part>

<s:part>
  <s:part-title>Element Reference</s:part-title>
  <s:part-contents />

  <s:section xml:id="elem_ref_overview">
    <s:section-title>Overview</s:section-title>

    <s:subsection>
      <s:subsection-title>Namespace URI</s:subsection-title>
      <s:paragraph>
        All
        <s:term s:type="package">structural</s:term>
        elements
        are in the
        <s:link-external s:target="http://www.io7m.com/schemas/structural/2.0.0">http://www.io7m.com/schemas/structural/2.0.0</s:link-external>
        namespace.
      </s:paragraph>
    </s:subsection>

    <s:subsection>
      <s:subsection-title>Attributes</s:subsection-title>
      <s:paragraph>
        All elements may have the standard
        <s:link-external s:target="http://www.w3.org/XML/1998/namespace.html">xml:lang and xml:base</s:link-external>
        attributes.
      </s:paragraph>
      <s:paragraph>
        The following elements may have a <s:term s:type="attribute">type</s:term>
        attribute and an
        <s:link-external s:target="http://www.w3.org/XML/1998/namespace.html">xml:id</s:link-external>
        attribute:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_document">document</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_formal-item">formal-item</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_image">image</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_list-item">list-item</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_list-ordered">list-ordered</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_list-unordered">list-unordered</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_paragraph">paragraph</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_part">part</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_section">section</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_subsection">subsection</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_term">term</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_verbatim">verbatim</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
      <s:paragraph>
        The contents of the <s:term s:type="attribute">type</s:term>
        attribute are appended to the resulting CSS <s:term
        s:type="attribute">class</s:term> attribute of the element in the
        XHTML output.
      </s:paragraph>
      <s:paragraph>
        Elements with an <s:term s:type="attribute">xml:id</s:term>
        attribute can be linked to using the <s:link
        s:target="elem_link">link</s:link> element.
      </s:paragraph>
      <s:paragraph>
        When the XSLT stylesheet encounters an <s:term
        s:type="attribute">xml:id</s:term> attribute on an element, it
        generates an XHTML anchor with an <s:term
        s:type="attribute">id</s:term> attribute consisting of the
        original <s:term s:type="attribute">xml:id</s:term> attribute
        contents prefixed with <s:term s:type="constant">"ref_"</s:term>.
        This allows linking to specific elements in the resulting XHTML
        documents from external locations. As an example, given an
        element:
        <s:verbatim s:type="example"><![CDATA[<s:term s:type="something" xml:id="a_term">Hello</s:term>]]></s:verbatim>
        The XHTML output will be similar to:
        <s:verbatim s:type="example"><![CDATA[<a id="ref_a_term"></a>
<span class="st200_term something">Hello</span>]]></s:verbatim>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        The XHTML elements resulting from each <s:term
        s:type="package">structural</s:term> element are assigned specific
        CSS classes for easy styling of the output. The CSS classes are
        documented with each element.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Navigation Bar</s:subsection-title>
      <s:paragraph>
        A navigation bar is placed at the top and bottom each generated page.
      </s:paragraph>
      <s:paragraph>
        For pages generated from <s:link s:target="elem_section">section</s:link>
        or <s:link s:target="elem_part">part</s:link> elements, the navigation
        bar contains links to the previous and next pages, and the enclosing
        <s:link s:target="elem_section">section</s:link> or
        <s:link s:target="elem_part">part</s:link>. The navigation bar also
        displays the titles of the destination pages above each link. For pages
        generated from <s:link s:target="elem_document">document</s:link> elements,
        only a link to the first <s:link s:target="elem_section">section</s:link>
        or <s:link s:target="elem_part">part</s:link> element is generated.
      </s:paragraph>
      <s:paragraph>
        The navigation bar itself is assigned the CSS class
        <s:term s:type="class">st200_navbar</s:term> in addition to the
        class <s:term s:type="class">st200_navbar_top</s:term> or
        <s:term s:type="class">st200_navbar_bottom</s:term> depending
        on where the bar in question appears on the page.
      </s:paragraph>
      <s:paragraph>
        The bar is a table structure with each cell being assigned one
        of the following CSS classes:
        <s:list-unordered>
          <s:list-item><s:term s:type="class">st200_navbar_prev_file_cell</s:term></s:list-item>
          <s:list-item><s:term s:type="class">st200_navbar_up_file_cell</s:term></s:list-item>
          <s:list-item><s:term s:type="class">st200_navbar_next_file_cell</s:term></s:list-item>
          <s:list-item><s:term s:type="class">st200_navbar_prev_title_cell</s:term></s:list-item>
          <s:list-item><s:term s:type="class">st200_navbar_up_title_cell</s:term></s:list-item>
          <s:list-item><s:term s:type="class">st200_navbar_next_title_cell</s:term></s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_document">
    <s:section-title>document</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">document</s:term>
        element denotes a <s:term s:type="package">structural</s:term>
        document. It must appear as the root node of an XML document.
        The element may contain
        either a series of <s:link s:target="elem_section">sections</s:link>
        or a series of <s:link s:target="elem_part">parts</s:link>.
      </s:paragraph>
      <s:paragraph>
        <s:term s:type="element">document</s:term>
        elements appear in table of contents entries (usually as the root),
        labelled with their respective
        <s:link s:target="elem_document-title">document-title</s:link>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Processing</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">document</s:term>
        element creates a new output file when encountered.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">document</s:term> elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_document-contents">document-contents</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_document-style">document-style</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_document-title">document-title</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_part">part</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_section">section</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_document-contents">
    <s:section-title>document-contents</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">document-contents</s:term>
        element specifies that a table of contents should
        be generated for the given
        <s:link s:target="elem_document">document</s:link>.
      </s:paragraph>
      <s:paragraph>
        Iff the document in question contains
        <s:link s:target="elem_part">part</s:link>
        elements, <s:link s:target="elem_subsection">subsection</s:link>
        elements are omitted from the list.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Processing</s:subsection-title>
      <s:paragraph>
        The table of contents appears at the start of the
        parent <s:link s:target="elem_document">document</s:link>
        and contains references to all the children of that
        element.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        In addition to any classes specified by the
        <s:term s:type="attribute">type</s:term>
        attribute, the main XHTML structure is assigned the class
        <s:term s:type="class">st200_document_contents</s:term>.
      </s:paragraph>
      <s:paragraph>
        Each element of the list is assigned the class
        <s:term s:type="class">st200_document_contents_item</s:term>
        in addition to one of
        <s:term s:type="class">st200_document_contents_item1</s:term>,
        <s:term s:type="class">st200_document_contents_item2</s:term>
        or <s:term s:type="class">st200_document_contents_item3</s:term>
        depending on the depth of the item in the list.
      </s:paragraph>
      <s:paragraph>
        The root <s:link s:target="elem_document">document</s:link>
        element of the list is assigned the class
        <s:term s:type="class">st200_document_contents_document</s:term>
        and all <s:link s:target="elem_part">part</s:link> and
        <s:link s:target="elem_section">section</s:link>
        elements appearing in the list are assigned the classes
        <s:term s:type="class">st200_document_contents_part</s:term> and
        <s:term s:type="class">st200_document_contents_section</s:term>,
        respectively.
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_document-style">
    <s:section-title>document-style</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">document-style</s:term>
        element specifies an additional CSS file for the
        given <s:link s:target="elem_document">document</s:link>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Processing</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">document-style</s:term>
        element causes a link to the given CSS file to be
        placed in all output files generated for the given
        document.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">document-style</s:term>
        element may only contain text.
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_document-title">
    <s:section-title>document-title</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">document-title</s:term>
        element specifies the title of the given
        <s:link s:target="elem_document">document</s:link>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        The XHTML element generated by the
        <s:term s:type="element">document-title</s:term>
        element is assigned the CSS
        <s:term s:type="class">st200_document_title</s:term>
         in addition to any specified by the
        <s:term s:type="attribute">type</s:term> attribute.
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_footnote">
    <s:section-title>footnote</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">footnote</s:term> element denotes
        sections of text that will appear at the bottom of the current
        page with numbered hyperlink references placed in the original
        text. <s:term s:type="element">footnote</s:term> elements are
        numbered relative to the ancestor <s:link
        s:target="elem_document">document</s:link>. <s:term
        s:type="element">footnote</s:term> elements may themselves
        contain footnotes.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">footnote</s:term>
        elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_footnote">footnote</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_image">image</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_link">link</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_link-external">link-external</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_list-ordered">list-ordered</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_list-unordered">list-unordered</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_table">table</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_term">term</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_verbatim">verbatim</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
      <s:paragraph>
        <s:term s:type="element">footnote</s:term> elements may also, obviously,
        contain text.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">footnote</s:term> element causes a section
        to be generated at the bottom of the page. This section is assigned the
        class <s:term s:type="class">st200_footnotes</s:term>. Each footnote
        is displayed as a form of numbered list. The number is assigned the
        class <s:term s:type="class">st200_footnote_number</s:term> and
        the body of each footnote appears in a section with the class
        <s:term s:type="class">st200_footnote_body</s:term>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Example</s:subsection-title>
      <s:paragraph>
        This paragraph contains a footnote
        <s:footnote>
          This footnote also contains a footnote
          <s:footnote>This footnote does not contain a footnote.</s:footnote>.
        </s:footnote>.
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_formal-item">
    <s:section-title>formal-item</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">formal-item</s:term>
        element provides a means to mark certain other
        elements as significant.  <s:term s:type="element">formal-item</s:term>
        elements are numbered relative to the containing 
        <s:link s:target="elem_section">section</s:link> or
        <s:link s:target="elem_subsection">subsection</s:link> and
        rendered with the given
        <s:link s:target="elem_formal-item-title">formal-item-title</s:link>.
      </s:paragraph>
      <s:paragraph>
        <s:term s:type="element">formal-item</s:term>
        elements must be classified by specifying a value for the
        <s:term s:type="attribute">kind</s:term> attribute. This allows
        rendering of lists of <s:term s:type="element">formal-item</s:term>
        elements of a given kind using the
        <s:link s:target="elem_formal-item-list">formal-item-list</s:link>
        element.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">formal-item</s:term> elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_formal-item-list">formal-item-list</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_image">image</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_list-ordered">list-ordered</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_list-unordered">list-unordered</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_table">table</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_verbatim">verbatim</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        The XHTML elements generated by the
        <s:term s:type="element">formal-item</s:term>
        element is assigned the CSS class
        <s:term s:type="class">st200_formal_item</s:term>
        in addition to any specified by the
        <s:term s:type="attribute">type</s:term> attribute.
      </s:paragraph>
      <s:paragraph>
        The title element of the generated element is assigned the class
        <s:term s:type="class">st200_formal_item_title</s:term>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Example</s:subsection-title>
      <s:formal-item s:kind="diagrams">
        <s:formal-item-title>Example Formal Item</s:formal-item-title>
        <s:image s:source="wheat.png" />
      </s:formal-item>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_formal-item-list">
    <s:section-title>formal-item-list</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">formal-item-list</s:term>
        element renders a list of all
        <s:link s:target="elem_formal-item">formal-item</s:link>
        elements of the kind specified by the
        <s:term s:type="attribute">kind</s:term> attribute.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        The XHTML element generated by the
        <s:term s:type="element">formal-item-list</s:term> element
        is assigned the CSS class
        <s:term s:type="class">st200_formal_item_list</s:term>
        in addition to any specified by the
        <s:term s:type="attribute">type</s:term> attribute.
      </s:paragraph>
      <s:paragraph>
        Each element of the list is assigned the class
        <s:term s:type="class">st200_formal_item_list_item</s:term>.
      </s:paragraph>
      <s:paragraph>
        The title of the element is assigned the class
        <s:term s:type="class">st200_formal_item_list_title</s:term>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Example</s:subsection-title>
      <s:paragraph>
        A <s:term s:type="element">formal-item-list</s:term> placed inside
        a <s:link s:target="elem_formal-item">formal-item</s:link>:
      </s:paragraph>
      <s:formal-item s:kind="example">
        <s:formal-item-title>Example Formal Item List</s:formal-item-title>
        <s:formal-item-list s:kind="diagrams" />
      </s:formal-item>
      <s:formal-item s:kind="example">
        <s:formal-item-title>Example Formal Item List (Examples)</s:formal-item-title>
        <s:formal-item-list s:kind="example" />
      </s:formal-item>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_formal-item-title">
    <s:section-title>formal-item-title</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">formal-item-title</s:term>
        element specifies the title of the given
        <s:link s:target="elem_formal-item">formal-item</s:link>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">formal-item-title</s:term>
        elements are assigned the following CSS classes in addition to any
        specified by the <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_formal_item_title</s:term>
          </s:list-item>
          <s:list-item>
            <s:term s:type="class">st200_formal_item_title_number</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Example</s:subsection-title>
      <s:formal-item s:kind="diagrams">
        <s:formal-item-title>A Formal Item With An Unusual Title</s:formal-item-title>
        <s:image s:source="wheat.png" />
      </s:formal-item>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_image">
    <s:section-title>image</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">image</s:term> element inserts the
        image specified by the <s:term s:type="attribute">source</s:term>
        attribute into the XHTML output. The width and height may
        optionally be specified with the <s:term
        s:type="attribute">width</s:term> and <s:term
        s:type="attribute">height</s:term> attributes, respectively. The
        text contents of the element are used in the XHTML if the image
        cannot be loaded<s:footnote>In the <s:term s:type="attribute">alt</s:term>
        attribute of the resulting <s:term s:type="element">img</s:term>.</s:footnote>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">image</s:term> elements are assigned the
        following CSS classes in addition to any specified by the
        <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_image</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Example</s:subsection-title>
      <s:paragraph>
        <s:image s:source="wheat.png" />
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_link">
    <s:section-title>link</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">link</s:term> element generates a
        hyperlink to the element with the given <s:term
        s:type="attribute">xml:id</s:term> attribute (specified by the
        given <s:term s:type="attribute">target</s:term> attribute) using
        the text enclosed by the <s:term s:type="element">link</s:term>
        element as the hyperlink text.
      </s:paragraph>
      <s:paragraph>
        The <s:term s:type="element">link</s:term> element depends on the
        XML validator to check link integrity. The XSLT stylesheets make
        no attempt to verify the validity or existence of link
        targets.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">link</s:term> elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_image">image</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
      <s:paragraph>
        <s:term s:type="element">link</s:term> elements may also contain
        text.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">link</s:term> elements are assigned the
        following CSS classes in addition to any specified by the
        <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_link</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Example</s:subsection-title>
      <s:paragraph>
        The following text:
        <s:verbatim s:type="example"><![CDATA[<link s:target="elem_paragraph">paragraph</link>]]></s:verbatim>
        Produces the following output in the context of this document:
        <s:link s:target="elem_paragraph">paragraph</s:link>.
      </s:paragraph>
      <s:paragraph>
        The following text:
        <s:verbatim s:type="example"><![CDATA[<paragraph><link s:target="elem_paragraph"><image s:source="strawberry.png">Strawberry</image></paragraph></link>]]></s:verbatim>
        Produces the following output in the context of this document:
      </s:paragraph>
      <s:paragraph>
        <s:link s:target="elem_paragraph"><s:image s:source="strawberry.png"/></s:link>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_link-external">
    <s:section-title>link-external</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">link-external</s:term> element
        generates a hyperlink to an external WWW address specified by
        the given <s:term s:type="attribute">target</s:term> attribute,
        using the text enclosed by the element as the hyperlink text.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">link-external</s:term> elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_image">image</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
      <s:paragraph>
        <s:term s:type="element">link-external</s:term> elements may also contain
        text.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">link-external</s:term> elements are
        assigned the following CSS classes in addition to any specified
        by the <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_link_external</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Example</s:subsection-title>
      <s:paragraph>
        The following text:
        <s:verbatim s:type="example"><![CDATA[<link-external s:target="http://www.io7m.com">io7m</link-external>]]></s:verbatim>
        Produces the following output in the context of this document:
        <s:link-external s:target="http://www.io7m.com">io7m</s:link-external>.
      </s:paragraph>
      <s:paragraph>
        The following text:
        <s:verbatim s:type="example"><![CDATA[<paragraph><link-external s:target="http://www.io7m.com"><image s:source="strawberry.png">Strawberry</image></paragraph></link-external>]]></s:verbatim>
        Produces the following output in the context of this document:
      </s:paragraph>
      <s:paragraph>
        <s:link-external s:target="http://www.io7m.com"><s:image s:source="strawberry.png"/></s:link-external>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_list-item">
    <s:section-title>list-item</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">list-item</s:term>
        element denotes an item in an
        <s:link s:target="elem_list-ordered">ordered</s:link>
        or <s:link s:target="elem_list-unordered">unordered</s:link>
        list.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">list-item</s:term>
        elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_footnote">footnote</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_image">image</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_link">link</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_link-external">link-external</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_list-ordered">list-ordered</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_list-unordered">list-unordered</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_term">term</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_verbatim">verbatim</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
      <s:paragraph>
        <s:term s:type="element">list-item</s:term>
        elements may also contain text.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">list-item</s:term>
        elements are assigned the following CSS classes in addition to any
        specified by the <s:term s:type="attribute">type</s:term>
        attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_list_item</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_list-ordered">
    <s:section-title>list-ordered</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">list-ordered</s:term>
        element denotes a list of elements. The individual
        list items are numbered.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">list-ordered</s:term>
        elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_list-item">list-item</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">list-ordered</s:term>
        elements are assigned the following CSS classes in addition to any
        specified by the <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_list_ordered</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_list-unordered">
    <s:section-title>list-unordered</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">list-ordered</s:term>
        element denotes a list of elements. The individual
        list items are bulleted.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">list-unordered</s:term>
        elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_list-item">list-item</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">list-unordered</s:term>
        elements are assigned the following CSS classes in addition to any
        specified by the <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_list_unordered</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_paragraph">
    <s:section-title>paragraph</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">paragraph</s:term>
        element denotes sections of text within a
        <s:link s:target="elem_section">section</s:link>
        or <s:link s:target="elem_section">subsection</s:link>.
        <s:term s:type="element">paragraph</s:term>
        elements are numbered relative to the enclosing element but
        do not have titles.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">paragraph</s:term> elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_footnote">footnote</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_formal-item-list">formal-item-list</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_image">image</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_link">link</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_link-external">link-external</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_list-ordered">list-ordered</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_list-unordered">list-unordered</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_table">table</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_term">term</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_verbatim">verbatim</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
      <s:paragraph>
        <s:term s:type="element">paragraph</s:term>
        elements may also, obviously, contain text.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">paragraph</s:term>
        elements are assigned the following CSS classes in addition to any
        specified by the <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_paragraph</s:term>
          </s:list-item>
          <s:list-item>
            <s:term s:type="class">st200_paragraph_number</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_part">
    <s:section-title>part</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">part</s:term>
        element denotes a significant section of a
        <s:link s:target="elem_document">document</s:link>
        element, of which it may appear as a child. The element must contain
        a series of <s:link s:target="elem_section">sections</s:link>.
      </s:paragraph>
      <s:paragraph>
        <s:term s:type="element">part</s:term>
        elements appear in table of contents entries,
        labelled with their respective
        <s:link s:target="elem_part-title">part-title</s:link>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Processing</s:subsection-title>
      <s:paragraph>
        For the multi-page stylesheets, the
        <s:term s:type="element">part</s:term>
        element creates a new output file when encountered.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">part</s:term> elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_part-contents">part-contents</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_part-title">part-title</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_section">section</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">part</s:term>
        elements are assigned the following CSS classes in addition to any
        specified by the <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_part</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_part-contents">
    <s:section-title>part-contents</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">part-contents</s:term>
        element specifies that a table of contents should
        be generated for the given <s:link s:target="elem_part">part</s:link>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Processing</s:subsection-title>
      <s:paragraph>
        The table of contents appears at the start of the
        parent <s:link s:target="elem_part">part</s:link>
        and contains references to all the children of that
        element.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        The CSS for
        <s:term s:type="element">part-contents</s:term>
        elements is slightly more complex.
        In addition to any classes specified by the
        <s:term s:type="attribute">type</s:term>
        attribute, the main list structure is assigned the class
        <s:term s:type="class">st200_part_contents</s:term>.
        Each element of the list is assigned the class
        <s:term s:type="class">st200_part_contents_item</s:term>
        in addition to one of
        <s:term s:type="class">st200_part_contents_item1</s:term>,
        <s:term s:type="class">st200_part_contents_item2</s:term> or
        <s:term s:type="class">st200_part_contents_item3</s:term>
        depending on the depth of the item in the list. The root
        <s:link s:target="elem_part">part</s:link>
        element of the list is assigned the class
        <s:term s:type="class">st200_part_contents_part</s:term> and all
        <s:link s:target="elem_section">section</s:link> and
        <s:link s:target="elem_subsection">subsection</s:link> elements
        appearing in the list are assigned the classes
        <s:term s:type="class">st200_part_contents_section</s:term>
        and
        <s:term s:type="class">st200_part_contents_subsection</s:term>,
        respectively.
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_part-title">
    <s:section-title>part-title</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">part-title</s:term>
        element specifies the title of the given
        <s:link s:target="elem_part">part</s:link>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">part-title</s:term>
        elements are assigned the following CSS classes in addition to any
        specified by the <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_part_title</s:term>
          </s:list-item>
          <s:list-item>
            <s:term s:type="class">st200_part_title_number</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_section">
    <s:section-title>section</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The
        <s:term s:type="element">section</s:term>
        element denotes a less significant section of the document than the
        <s:link s:target="elem_part">part</s:link>
        element, of which it may appear as a child. The element may contain
        either a series of
        <s:link s:target="elem_subsection">subsections</s:link>
        or a series of <s:link s:target="elem_paragraph">paragraphs</s:link>.
      </s:paragraph>
      <s:paragraph>
        <s:term s:type="element">section</s:term>
        elements appear in table of contents entries, labelled with their
        respective <s:link s:target="elem_section-title">section-title</s:link>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Processing</s:subsection-title>
      <s:paragraph>
        For the multi-page stylesheets, the
        <s:term s:type="element">section</s:term>
        element creates a new output file when encountered.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">section</s:term>
        elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_paragraph">paragraph</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_section-contents">section-contents</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_section-title">section-title</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_subsection">subsection</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">section</s:term>
        elements are assigned the following CSS classes in addition to any
        specified by the <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_section</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Example</s:subsection-title>
      <s:paragraph>
        This page is contained within one
        <s:term s:type="element">section</s:term> element.
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_section-contents">
    <s:section-title>section-contents</s:section-title>
    <s:section-contents />
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">section-contents</s:term>
        element specifies that a table of contents should
        be generated for the given
        <s:link s:target="elem_section">section</s:link>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Processing</s:subsection-title>
      <s:paragraph>
        The table of contents appears at the start of the
        parent <s:link s:target="elem_section">section</s:link>
        and contains references to all the children of that
        element.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        The CSS for
        <s:term s:type="element">section-contents</s:term>
        elements is slightly more complex.
        In addition to any classes specified by the
        <s:term s:type="attribute">type</s:term>
        attribute, the main list structure is assigned the
        class <s:term s:type="class">st200_section_contents</s:term>.
        Each element of the list is assigned the class
        <s:term s:type="class">st200_section_contents_item</s:term>
        in addition to one of
        <s:term s:type="class">st200_section_contents_item1</s:term>,
        <s:term s:type="class">st200_section_contents_item2</s:term> or
        <s:term s:type="class">st200_section_contents_item3</s:term>
        depending on the depth of the item in the list. The root
        <s:link s:target="elem_section">section</s:link> element of the list is
        assigned the class
        <s:term s:type="class">st200_section_contents_section</s:term>
        and all
        <s:link s:target="elem_subsection">subsection</s:link> elements
        appearing in the list are assigned the class
        <s:term s:type="class">st200_section_contents_subsection</s:term>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Example</s:subsection-title>
      <s:paragraph>
        The table of contents above was generated by adding a
        <s:term s:type="element">section-contents</s:term>
        element at the beginning of the section.
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_section-title">
    <s:section-title>section-title</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">section-title</s:term>
        element specifies the title of the given
        <s:link s:target="elem_section">section</s:link>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">section-title</s:term>
        elements are assigned the following CSS classes in addition to any
        specified by the <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_section_title</s:term>
          </s:list-item>
          <s:list-item>
            <s:term s:type="class">st200_section_title_number</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Example</s:subsection-title>
      <s:paragraph>
        The 'section-title' text above was specified with the
        <s:term s:type="element">section-title</s:term>
        element.
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_subsection">
    <s:section-title>subsection</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The
        <s:term s:type="element">subsection</s:term>
        element denotes a less significant section of
        the document than the
        <s:link s:target="elem_section">section</s:link>
        element, of which it may appear as a child.
      </s:paragraph>
      <s:paragraph>
        <s:term s:type="element">subsection</s:term>
        elements appear in table of contents entries,
        labelled with their respective
        <s:link s:target="elem_subsection-title">subsection-title</s:link>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">subsection</s:term>
        elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_paragraph">paragraph</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_subsection-title">subsection-title</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Example</s:subsection-title>
      <s:paragraph>
        This 'Example' section is a subsection containing one paragraph.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">subsection</s:term>
        elements are assigned the following CSS classes in addition to any
        specified by the <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_subsection</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_subsection-title">
    <s:section-title>subsection-title</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">subsection-title</s:term>
        element specifies the title of the given
        <s:link s:target="elem_subsection">subsection</s:link>.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">subsection-title</s:term>
        elements are assigned the following CSS classes in addition to any
        specified by the <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_subsection_title</s:term>
          </s:list-item>
          <s:list-item>
            <s:term s:type="class">st200_subsection_title_number</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Example</s:subsection-title>
      <s:paragraph>
        The 'Example' title of this subsection was specified with:
        <s:verbatim s:type="example"><![CDATA[<s:subsection-title>Example</s:subsection-title>]]></s:verbatim>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_table">
    <s:section-title>table</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">table</s:term> element allows the
        specification of tabular data.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">table</s:term>
        elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_table_body">table-body</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_table_head">table-head</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_table_summary">table-summary</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">table</s:term> elements are assigned the
        following CSS classes in addition to any specified by the
        <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_table</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Example</s:subsection-title>
      <s:paragraph>
        The following text:
        <s:verbatim s:type="example"><![CDATA[<table>
  <table-summary>Summary</table-summary>
  <table-head>
    <table-column-name>First</table-column-name>
    <table-column-name>Second</table-column-name>
    <table-column-name>Third</table-column-name>
  </table-head>
  <table-body>
    <table-row>
      <table-cell>Cell 1</table-cell>
      <table-cell>Cell 2</table-cell>
      <table-cell>Cell 3</table-cell>
    </table-row>
    <table-row>
      <table-cell>Cell 1</table-cell>
      <table-cell>Cell 2</table-cell>
      <table-cell>Cell 3</table-cell>
    </table-row>
  </table-body>
</table>]]></s:verbatim>
        Produces the following output in the context of this document:
        <s:table>
          <s:table-summary>Summary</s:table-summary>
          <s:table-head>
            <s:table-column-name>First</s:table-column-name>
            <s:table-column-name>Second</s:table-column-name>
            <s:table-column-name>Third</s:table-column-name>
          </s:table-head>
          <s:table-body>
            <s:table-row>
              <s:table-cell>Cell 1</s:table-cell>
              <s:table-cell>Cell 2</s:table-cell>
              <s:table-cell>Cell 3</s:table-cell>
            </s:table-row>
            <s:table-row>
              <s:table-cell>Cell 1</s:table-cell>
              <s:table-cell>Cell 2</s:table-cell>
              <s:table-cell>Cell 3</s:table-cell>
            </s:table-row>
          </s:table-body>
        </s:table>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_table_body">
    <s:section-title>table-body</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">table-body</s:term> element denotes
        the rows and cells of the parent
        <s:link s:target="elem_table">table</s:link> element.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">table-body</s:term>
        elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_table_row">table-row</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">table-body</s:term> elements are assigned the
        following CSS classes in addition to any specified by the
        <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_table_body</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_table_cell">
    <s:section-title>table-cell</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">table-cell</s:term> element denotes
        a cell in a row of a <s:link s:target="elem_table">table</s:link>
        element.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">table-cell</s:term>
        elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_footnote">footnote</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_image">image</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_link">link</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_link-external">link-external</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_list-ordered">list-ordered</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_list-unordered">list-unordered</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_term">term</s:link>
          </s:list-item>
          <s:list-item>
            <s:link s:target="elem_verbatim">verbatim</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">table-cell</s:term> elements are assigned the
        following CSS classes in addition to any specified by the
        <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_table_cell</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_table_column_name">
    <s:section-title>table-column-name</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">table-column-name</s:term> element allows
        the specification of column names for
        <s:link s:target="elem_table">table</s:link> elements.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">table-column-name</s:term> elements are assigned the
        following CSS classes in addition to any specified by the
        <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_table_column_name</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_table_head">
    <s:section-title>table-head</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">table-head</s:term> element allows the
        optional specification of column names for
        <s:link s:target="elem_table">table</s:link> elements.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">table-head</s:term>
        elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_table_column_name">table-column-name</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">table-head</s:term> elements are assigned the
        following CSS classes in addition to any specified by the
        <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_table_head</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_table_row">
    <s:section-title>table-row</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">table-row</s:term> element denotes
        a row of cells in a <s:link s:target="elem_table">table</s:link>
        element.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Children</s:subsection-title>
      <s:paragraph>
        The following elements may occur as children of
        <s:term s:type="element">table-row</s:term>
        elements:
        <s:list-unordered>
          <s:list-item>
            <s:link s:target="elem_table_cell">table-cell</s:link>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">table-row</s:term> elements are assigned the
        following CSS classes in addition to any specified by the
        <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_table_row</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_table_summary">
    <s:section-title>table-summary</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">table-summary</s:term> element allows
        the specification of a summary for
        <s:link s:target="elem_table">table</s:link> elements.
      </s:paragraph>
      <s:paragraph>
        The summary is required to pass XHTML Strict validity checks;
        it is otherwise invisible in the output.
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_term">
    <s:section-title>term</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">term</s:term> element denotes a
        significant element of a section of text. It is usually used to
        highlight or mark individual words in order to assign them a
        particular CSS class.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">term</s:term> elements are assigned the
        following CSS classes in addition to any specified by the
        <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_term</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>Example</s:subsection-title>
      <s:paragraph>
        The following text:
        <s:verbatim s:type="example"><![CDATA[<term s:type="element">ELEMENT</term>]]></s:verbatim>
        Produces the following output in the context of this document:
        <s:term s:type="element">ELEMENT</s:term>.
      </s:paragraph>
    </s:subsection>
  </s:section>

  <s:section xml:id="elem_verbatim">
    <s:section-title>verbatim</s:section-title>
    <s:subsection>
      <s:subsection-title>Description</s:subsection-title>
      <s:paragraph>
        The <s:term s:type="element">verbatim</s:term>
        element denotes a section of text in which whitespace
        should be preserved exactly as it was written. It is
        analogous to the XHTML <s:term s:type="element">pre</s:term>
        element.
      </s:paragraph>
      <s:paragraph>
        For best results, the contents of the
        <s:term s:type="element">verbatim</s:term>
        element should be contained within an XML
        <s:term s:type="element">&lt;![CDATA[...]]&gt;</s:term>
        element to prevent possible interference from the XML processor.
      </s:paragraph>
    </s:subsection>
    <s:subsection>
      <s:subsection-title>CSS</s:subsection-title>
      <s:paragraph>
        <s:term s:type="element">verbatim</s:term>
        elements are assigned the following CSS classes in addition to any
        specified by the <s:term s:type="attribute">type</s:term> attribute:
        <s:list-unordered>
          <s:list-item>
            <s:term s:type="class">st200_verbatim</s:term>
          </s:list-item>
        </s:list-unordered>
      </s:paragraph>
    </s:subsection>
  </s:section>
</s:part>

</s:document>
